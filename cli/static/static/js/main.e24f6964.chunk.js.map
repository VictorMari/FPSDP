{"version":3,"sources":["App.tsx","index.tsx"],"names":["useStyles","makeStyles","_theme","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","renderers","materialRenderers","App","classes","useState","displayDataAsString","setDisplayDataAsString","jsonformsData","setJsonformsData","useEffect","JSON","stringify","id","style","position","top","Button","className","onClick","parse","fetch","method","body","headers","then","e","alert","catch","console","log","color","variant","schema","uischema","data","cells","materialCells","onChange","errors","theme","createMuiTheme","overrides","MuiFormControl","root","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"61CAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAa,CACxCC,UAAW,CACTC,QAAS,MACTC,MAAO,QAETC,MAAO,CACLC,UAAW,SACXH,QAAS,UAEXI,YAAa,CACXC,QAAS,OACTC,eAAgB,SAChBC,aAAc,SACdC,gBAAiB,UACjBC,aAAc,QAEhBC,YAAa,CACXC,OAAQ,SACRN,QAAS,SAGXO,SAAU,CACRD,OAAQ,OACRX,QAAS,YAIPa,EAAc,GAIdC,EAAS,YACVC,qBAsEUC,EAlEH,WACV,IAAMC,EAAUrB,IADA,EAEsCsB,mBAAS,IAF/C,mBAETC,EAFS,KAEYC,EAFZ,OAG0BF,mBAAcL,GAHxC,mBAGTQ,EAHS,KAGMC,EAHN,KAKhBC,qBAAU,WACRH,EAAuBI,KAAKC,UAAUJ,EAAe,KAAM,MAC1D,CAACA,IAyBJ,OACE,eAAC,WAAD,WACE,qBAAKK,GAAG,WAAWC,MAAO,CACtBC,SAAU,QACV3B,MAAO,OACP4B,IAAK,MAHT,SAKE,cAACC,EAAA,EAAD,CACMC,UAAWd,EAAQP,YACnBsB,QA3BS,WACJR,KAAKS,MAAMd,GAC1Be,MAAM,IAAK,CACTC,OAAQ,OACRC,KAAMjB,EACNkB,QAAS,CACP,eAAgB,sBAGnBC,MAAK,SAAAC,GAAC,OAAIC,MAAM,6BAChBC,OAAM,SAAAF,GACLG,QAAQC,IAAIJ,GACZC,MAAMD,EAAEH,UAgBAQ,MAAM,UACNC,QAAQ,YAJd,mCAYF,qBAAKd,UAAWd,EAAQL,SAAxB,SACE,cAAC,YAAD,CACEkC,OAAQA,EACRC,SAAUA,EACVC,KAAM3B,EACNP,UAAWA,EACXmC,MAAOC,gBACPC,SAAU,cAAGC,OAAH,IAAWJ,EAAX,EAAWA,KAAX,OAAsB1B,EAAiB0B,YCvGrDK,EAAQC,YAAe,CAC3BC,UAAW,CACTC,eAAgB,CACdC,KAAM,CACJ9C,OAAQ,eAMhB+C,IAASC,OACP,eAACC,EAAA,EAAD,CAAeP,MAAOA,EAAtB,UACE,cAACQ,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e24f6964.chunk.js","sourcesContent":["import { Fragment, useState, useEffect } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport logo from './logo.svg';\nimport './App.css';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GpsFixedTwoTone } from '@material-ui/icons';\n\nconst useStyles = makeStyles((_theme) => ({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: '0 auto',\n    display: 'block',\n    \n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n}));\n\nconst initialData = {\n \n};\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [displayDataAsString, setDisplayDataAsString] = useState('');\n  const [jsonformsData, setJsonformsData] = useState<any>(initialData);\n\n  useEffect(() => {\n    setDisplayDataAsString(JSON.stringify(jsonformsData, null, 2));\n  }, [jsonformsData]);\n\n  const clearData = () => {\n    setJsonformsData({});\n  };\n\n\n  const downloadData = () => {\n    let formData = JSON.parse(displayDataAsString)  \n    fetch(\"/\", {\n      method: \"POST\",\n      body: displayDataAsString,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n    .then(e => alert(\"Submitted successfully\"))\n    .catch(e => {\n      console.log(e)\n      alert(e.body)\n    })\n  };\n\n\n\n  return (\n    <Fragment>\n      <div id=\"download\" style={{\n          position: \"fixed\",\n          width: \"100%\",\n          top: \"3%\",\n        }}>\n        <Button\n              className={classes.resetButton}\n              onClick={downloadData}\n              color='primary'\n              variant='contained'>\n          Send Specifications\n        </Button>\n      </div>\n\n\n      \n\n      <div className={classes.demoform}>\n        <JsonForms\n          schema={schema}\n          uischema={uischema}\n          data={jsonformsData}\n          renderers={renderers}\n          cells={materialCells}\n          onChange={({ errors, data }) => setJsonformsData(data)}\n        />\n      </div>\n     \n    </Fragment>\n  );\n};\n\nexport default App;","import { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createMuiTheme({\n  overrides: {\n    MuiFormControl: {\n      root: {\n        margin: '0.8em 0',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}